// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id        String @id @default(uuid())
  userId    String @unique
  name      String
  email     String @db.Text
  image     String? @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workouts  Workout[]
}

model Workout {
  id          String @id @default(uuid())
  name        String 
  description String?
  date        String
  duration    String?
  start       String?
  end         String?
  weight      Float?
  completed   Boolean @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  trainings   Training[]

  profileId   String
  profile     Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Training {
  id          String @id @default(uuid())
  duration    String?
  completed   Boolean @default(false)
  sets        Set[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  exerciseId  String
  exercise    Exercise @relation(fields: [exerciseId], references: [id])

  workoutId   String
  workout     Workout @relation(fields: [workoutId], references: [id], onDelete: Cascade)
}

model Set {
  id          String @id @default(uuid())
  reps        Int?
  weight      Int?
  completed   Boolean @default(false)
  order       Int

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  trainingId  String 
  training    Training @relation(fields: [trainingId], references: [id], onDelete: Cascade)
}

model Exercise {
  id        String @id @default(uuid())
  name      String
  bodyPart  String @db.Text
  equipment String
  gifUrl    String @db.Text
  target    String

  trainings Training[]
}
